使用 `screen` 可以让你的程序在一个独立的会话中运行，即使你断开连接或关闭终端，程序仍然会继续运行。

### 使用 `screen` 运行 `Model1.py`

1. **启动一个新的 `screen` 会话**：
   ```bash
   screen -S model_run
   ```
   这将创建一个名为 `model_run` 的 `screen` 会话。

2. **在 `screen` 会话中运行 Python 脚本**：
   ```bash
   python Model1.py > /media/ssd/zhc/zhc/TextAttack/asr-code-switch/en/output.log 2>&1
   ```
   这会将输出保存到指定的 `output.log` 文件中。

3. **分离 `screen` 会话**：
   按 `Ctrl + A`，然后按 `D` 键。这会将你从 `screen` 会话中分离出来，返回到原始终端，同时 `Model1.py` 将继续运行。

4. **重新连接到 `screen` 会话**：
   如果你想查看 `screen` 会话的运行情况，可以通过以下命令重新连接：
   ```bash
   screen -r model_run
   ```

5. **查看输出日志**：
   如果不想重新连接 `screen` 会话，可以直接通过 `tail` 命令查看 `output.log` 文件的最新输出：
   ```bash
   tail -f /media/ssd/zhc/zhc/TextAttack/asr-code-switch/en/output.log
   ```

6. **退出 `screen` 会话**：
   如果你希望永久退出并关闭 `screen` 会话，在会话中按 `Ctrl + D` 或运行 `exit` 命令。

### 其他相关 `screen` 命令
- **列出所有 `screen` 会话**：
  ```bash
  screen -ls
  ```

- **恢复到特定的 `screen` 会话**：
  ```bash
  screen -r <session_id>
  ```
  `session_id` 可以通过 `screen -ls` 查看。
